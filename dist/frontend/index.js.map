{"version":3,"file":"dist/frontend/index.js","mappings":"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","sources":["webpack://countdown/./src/frontend.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n\tconst countdowns = document.querySelectorAll(\".eb-cd-wrapper > .eb-cd-inner\");\n\n\t// Return if there is no countdown block\n\tif (!countdowns) return;\n\n\tfor (let i = 0; i < countdowns.length; i++) {\n\t\tconst element = countdowns[i];\n\n\t\tconst fakeElement = { textContent: \"3e\" };\n\n\t\tconst daySpan =\n\t\t\telement.querySelector(\".cd-box-day > .eb-cd-digit\") || fakeElement;\n\t\tconst hourSpan =\n\t\t\telement.querySelector(\".cd-box-hour > .eb-cd-digit\") || fakeElement;\n\t\tconst minuteSpan =\n\t\t\telement.querySelector(\".cd-box-minute > .eb-cd-digit\") || fakeElement;\n\t\tconst secondSpan =\n\t\t\telement.querySelector(\".cd-box-second > .eb-cd-digit\") || fakeElement;\n\n\t\tconst MINUTE_IN_SECONDS = 60;\n\t\tconst HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;\n\t\tconst DAY_IN_SECONDS = 24 * HOUR_IN_SECONDS;\n\t\tconst WEEK_IN_SECONDS = 7 * DAY_IN_SECONDS;\n\t\tconst MONTH_IN_SECONDS = 30 * DAY_IN_SECONDS;\n\t\tconst YEAR_IN_SECONDS = 365 * DAY_IN_SECONDS;\n\t\tconst HOUR_IN_MILISECONDS = 60 * 60 * 1000;\n\n\t\tconst blockId = element.getAttribute(\"blockId\");\n\t\tconst evergreenTimer = element.getAttribute(\"data-is-evergreen-time\");\n\t\tconst evergreenTimerHours = element.getAttribute(\n\t\t\t\"data-evergreen-time-hours\"\n\t\t);\n\n\t\tconst evergreenTimerMinutes = element.getAttribute(\n\t\t\t\"data-evergreen-time-minutes\"\n\t\t);\n\t\tconst evergreenTimerRecurring = element.getAttribute(\n\t\t\t\"data-evergreen-recurring\"\n\t\t);\n\t\tconst evergreenTimerRestartTime = element.getAttribute(\n\t\t\t\"data-evergreen-restart-time\"\n\t\t);\n\t\tconst evergreenTimerDeadlineTime = element.getAttribute(\n\t\t\t\"data-evergreen-deadline-time\"\n\t\t);\n\n\t\tconst timeLeft = (deadlineTimeStamp, intervalId = null) => {\n\t\t\tconst now = Date.now();\n\n\t\t\tconst secondsLeft = Math.round((deadlineTimeStamp - now) / 1000);\n\t\t\tconst seconds = secondsLeft % 60;\n\t\t\tconst minutes = Math.floor(secondsLeft / 60) % 60;\n\t\t\tconst hours = Math.floor(secondsLeft / 3600) % 24;\n\t\t\tconst days = Math.floor(secondsLeft / 86400);\n\n\t\t\tif (secondsLeft < 0) {\n\t\t\t\tclearInterval(intervalId);\n\t\t\t\tdaySpan.textContent = \"00\";\n\t\t\t\thourSpan.textContent = \"00\";\n\t\t\t\tminuteSpan.textContent = \"00\";\n\t\t\t\tsecondSpan.textContent = \"00\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdaySpan.textContent = days < 10 ? `0${days}` : `${days}`;\n\t\t\thourSpan.textContent = hours < 10 ? `0${hours}` : `${hours}`;\n\t\t\tminuteSpan.textContent = minutes < 10 ? `0${minutes}` : `${minutes}`;\n\t\t\tsecondSpan.textContent = seconds < 10 ? `0${seconds}` : `${seconds}`;\n\t\t};\n\n\t\tif (\"true\" === evergreenTimer) {\n\t\t\tlet evergreenInterval = blockId + \"_evergreen_interval\",\n\t\t\t\tevergreenTimeKey = blockId + \"_evergreen_time\",\n\t\t\t\tinterval = localStorage.getItem(evergreenInterval),\n\t\t\t\tdate = localStorage.getItem(evergreenTimeKey),\n\t\t\t\thours = parseInt(evergreenTimerHours || 0) * HOUR_IN_SECONDS,\n\t\t\t\tminutes = parseInt(evergreenTimerMinutes || 0) * MINUTE_IN_SECONDS,\n\t\t\t\tevergreenTime = parseInt(hours + minutes);\n\n\t\t\tif (date === null || interval === null || interval != evergreenTime) {\n\t\t\t\tdate = Date.now() + parseInt(evergreenTime) * 1000;\n\t\t\t\tlocalStorage.setItem(evergreenInterval, evergreenTime);\n\t\t\t\tlocalStorage.setItem(evergreenTimeKey, date);\n\t\t\t}\n\n\t\t\tif (\"false\" !== evergreenTimerRecurring) {\n\t\t\t\tlet recurringAfter =\n\t\t\t\t\tparseFloat(evergreenTimerRestartTime) * HOUR_IN_MILISECONDS;\n\n\t\t\t\tif (parseInt(date) + recurringAfter < Date.now()) {\n\t\t\t\t\tdate = Date.now() + parseInt(evergreenTime) * 1000;\n\t\t\t\t\tlocalStorage.setItem(evergreenTimeKey, date);\n\t\t\t\t}\n\n\t\t\t\tif (evergreenTimerDeadlineTime < date) {\n\t\t\t\t\tdate = evergreenTimerDeadlineTime;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttimeLeft(date || 0);\n\t\t\tconst intervalIdEver = setInterval(() => {\n\t\t\t\ttimeLeft(date || 0, intervalIdEver);\n\t\t\t}, 1000);\n\t\t}\n\t\tif (null == evergreenTimer || \"false\" == evergreenTimer) {\n\t\t\tlet deadlineTimeStamp = parseInt(\n\t\t\t\telement.getAttribute(\"data-deadline-time\")\n\t\t\t);\n\t\t\ttimeLeft(deadlineTimeStamp || 0);\n\n\t\t\tconst intervalId = setInterval(() => {\n\t\t\t\ttimeLeft(deadlineTimeStamp || 0, intervalId);\n\t\t\t}, 1000);\n\t\t}\n\t}\n});\n"],"names":["document","addEventListener","countdowns","querySelectorAll","i","element","fakeElement","textContent","daySpan","querySelector","hourSpan","minuteSpan","secondSpan","MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","WEEK_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","HOUR_IN_MILISECONDS","blockId","getAttribute","evergreenTimer","evergreenTimerHours","evergreenTimerMinutes","evergreenTimerRecurring","evergreenTimerRestartTime","evergreenTimerDeadlineTime","timeLeft","deadlineTimeStamp","intervalId","now","Date","secondsLeft","Math","round","seconds","minutes","floor","hours","days","clearInterval","evergreenInterval","evergreenTimeKey","interval","localStorage","getItem","date","parseInt","evergreenTime","setItem","recurringAfter","parseFloat","intervalIdEver","setInterval","length"],"sourceRoot":""}